var fpath = "/Users/mht/Documents/research/polgrice/experiment/data_analysis/data/"

var semData = mht.readCSV(fpath+"literalSemantics.csv").data
var df_semantics = dataFrame(semData, ["state", "judgment"])

var allStates = _.uniq(_.pluck(df_semantics,"state"))
var allUtterances = _.uniq(_.pluck(df_semantics,"utterance"))

var states = [1,2,3,4,5]
var utterances = ["terrible","bad","okay","good","amazing"]


var altUtterance = "null"
var utterancePrior_LS = function(utt){
	return uniformDraw([utt, altUtterance])
}

var meaning_LS = function(words, theta, state){
    return words == 'null' ? 
    		true : 
	   		words == "negation" ? 
		    		!flip(theta[state]):
	   	    		 flip(theta[state])
}


var listener0_LS = function(utterance, theta) {
  Enumerate(function(){
	var state = uniformDraw(states)
	var m = meaning_LS(utterance, theta, state)
	condition(m)
	return state
  })
}


var speaker1_LS = function(state, targetUtt, theta) {
  Enumerate(function(){
    var utterance = utterancePrior_LS(targetUtt)
    var L0 = listener0_LS(utterance, theta)
    var utility = L0.score([],state)
    factor(utility)
    return utterance
  })
}


var semanticsBDA = function(){
	foreach(allUtterances, function(utt){
		var utteranceData = subset(df_semantics, "utterance", utt)

		var theta = {
			1: uniform(0,1),
			2: uniform(0,1),
			3: uniform(0,1),
			4: uniform(0,1),
			5: uniform(0,1)
		}

		foreach(allStates, function(state){
			// var theta = uniform(0,1)
			var responses = _.pluck(subset(utteranceData, "state", state), "judgment")
			// console.log(responses)
			var s1 = speaker1_LS(state, utt, theta)

			var scr = sum(map(function(d){return s1.score([], d==1 ? utt : altUtterance)}, responses))
			// var scr = sum(map(function(d){return bernoulliERP.score([theta],d==1)}, responses))
			// console.log(scr)

			factor(scr)

			// query.add([utt, state], theta)

		})

		query.add([utt, 1], theta[1])
		query.add([utt, 2], theta[2])
		query.add([utt, 3], theta[3])
		query.add([utt, 4], theta[4])
		query.add([utt, 5], theta[5])

	})

	return query
}